{
  "name": "stdlib", 
  "tests": [
	{ "id":  0,"name":"true_int_eq", "input": "(= 1 1)", "output": "true" },
	{ "id":  1,"name":"false_int_eq", "input": "(= 1 2)", "output": "false" },
	{ "id":  2,"name":"true_str_eq", "input": "(= \"1\" \"1\")", "output": "true" },
	{ "id":  3,"name":"false_str_eq", "input": "(= \"1\" \"2\")", "output": "false" },
	{ "id":  4,"name":"true_list_eq", "input": "(= [1 2 3] [1 2 3])", "output": "true" },
	{ "id":  5,"name":"false_list_eq", "input": "(= [1 2 3] [1 2])", "output": "false" },
	{ "id":  6,"name":"true_sym_eq", "input": "(= 'true 'true)", "output": "true" },
	{ "id":  7,"name":"false_sym_eq", "input": "(= 'true 'false)", "output": "false" },
	{ "id":  8,"name":"true_hash_eq", "input": "(= {:a 1} {:a 1})", "output": "true" },
	{ "id":  9,"name":"false_hash_eq_value", "input": "(= {:a 1} {:a 2})", "output": "false" },
	{ "id": 10,"name":"false_hash_eq_key", "input": "(= {:a 1} {:b 1})", "output": "false" },
	{ "id": 11,"name":"true_int_neq", "input": "(!= 1 2)", "output": "true" },
	{ "id": 12,"name":"sum", "input": "(+ 1 2)", "output": "3" },
	{ "id": 13,"name":"sub", "input": "(- 3 2)", "output": "1"},
	{ "id": 14,"name":"mul", "input": "(* 3 2)", "output": "6"},
	{ "id": 15,"name":"div", "input": "(/ 4 2)", "output": "2"},
	{ "id": 16,"name":"bt", "input": "(> 4 2)", "output": "true"},
	{ "id": 17,"name":"lt", "input": "(< 4 2)", "output": "false"},
	{ "id": 18,"name":"be", "input": "(>= 2 2)", "output": "true"},
	{ "id": 19,"name":"le", "input": "(<= 3 2)", "output": "false"},
	{ "id": 20,"name":"in_int", "input": "(in 3 [1 2 3])", "output": "true"},
	{ "id": 21,"name":"in_str_list", "input": "(in \"ola\" [\"ola\" \"adeus\"])", "output": "true"},
	{ "id": 22,"name":"in_str", "input": "(in \"a\" \"ola\")", "output": "true"},
	{ "id": 23,"name":"not", "input": "(not true)", "output": "false"},
	{ "id": 24,"name":"and", "input": "(and true true)", "output": "true"},
	{ "id": 25,"name":"or", "input": "(or false true)", "output": "true"},
	{ "id": 26,"name":"nand", "input": "(nand false true)", "output": "true"},
	{ "id": 27,"name":"nor", "input": "(nor false true)", "output": "false"},
	{ "id": 28,"name":"xor", "input": "(xor false true)", "output": "true"},
	{ "id": 29,"name":"xnor", "input": "(xnor false true)", "output": "false"},
	{ "id": 30,"name":"list", "input": "(list 1 2 3)", "output": "(1 2 3)"},
	{ "id": 31,"name":"list_pred", "input": "(list? (list 1 2 3))", "output": "true"},
	{ "id": 32,"name":"empty_pred", "input": "(empty? '())", "output": "true"},
	{ "id": 33,"name":"count", "input": "(count (list 1 2 3))", "output": "3"},
	{ "id": 34,"name":"atom", "input": "(atom 1))", "output": "(atom 1)"},
	{ "id": 35,"name":"atom_pred", "input": "(atom? (atom 1)))", "output": "true"},
	{ "id": 36,"name":"deref", "input": "(deref (atom 1)))", "output": "1"},
	{ "id": 37,"name":"car", "input": "(car (list 1 2 3))", "output": "1"},
	{ "id": 38,"name":"cdr", "input": "(cdr (list 1 2 3))", "output": "(2 3)"},
	{ "id": 39,"name":"cons", "input": "(cons 1 '(2 3))", "output": "(1 2 3)"},
	{ "id": 40,"name":"concat", "input": "(concat [1 2 3] [4 5 6])", "output": "(1 2 3 4 5 6)"},
	{ "id": 41,"name":"vec", "input": "(vec (list 1 2 3))", "output": "[1 2 3]"},
	{ "id": 42,"name":"nth", "input": "(nth [1 2 3] 1)", "output": "2"},
	{ "id": 43,"name":"first", "input": "(first (list 1 2 3))", "output": "1"},
	{ "id": 44,"name":"rest", "input": "(rest (list 1 2 3))", "output": "(2 3)"},
	{ "id": 45,"name":"apply", "input": "(apply + (list 1 2 3))", "output": "3"},
	{ "id": 46,"name":"map", "input": "(map nil? (list 1 nil 3))", "output": "(false true false)"},
	{ "id": 47,"name":"filter", "input": "(filter nil? (list 1 nil 3))", "output": "(nil)"},
	{ "id": 48,"name":"reduce", "input": "(reduce + (list 1 2 3))", "output": "6"},
	{ "id": 49,"name":"true_red", "input": "(nil? 1)", "output": "false"},
	{ "id": 50,"name":"false_pred", "input": "(true? true)", "output": "true"},
	{ "id": 51,"name":"false_pred", "input": "(false? true)", "output": "false"},
	{ "id": 52,"name":"symbol_pred", "input": "(symbol? 'ola)", "output": "true"},
	{ "id": 53,"name":"keyword", "input": "(keyword \"ola\")", "output": ":ola"},
	{ "id": 54,"name":"keyword_pred", "input": "(keyword? (keyword \"ola\"))", "output": "true"},
	{ "id": 55,"name":"vector_pred", "input": "(vector? [1 2 3])", "output": "true"},
	{ "id": 56,"name":"sequential_pred", "input": "(sequential? [1 2 3])", "output": "true"},
	{ "id": 57,"name":"hash_map", "input": "(hash-map \"a\" 1 \"b\" 2)", "output": "{a 1 b 2}"},
	{ "id": 58,"name":"map_pred", "input": "(map? {\"a\" 1 \"b\" 2})", "output": "true"}
]}
